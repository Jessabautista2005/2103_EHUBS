/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

/**
 *
 * @author ayodr
 */
import Control_Connector.DBConnect;
import java.sql.*;
import com.toedter.calendar.JDateChooser;
import java.util.Calendar;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import optical.Patient;
import optical.Session;
import UI.MainWindow;


public class ScheduleAppointment extends javax.swing.JPanel {

    /**
     * Creates new form ScheduleAppointment
     */
    private MainWindow mainWindow;
    private Connection con;
    public ScheduleAppointment(MainWindow mainWindow) {
        initComponents();
        this.mainWindow = mainWindow;

        con = DBConnect.getConnection();
        
            backButton.addActionListener(e -> {
            mainWindow.showDefaultPanel();  // Go back to the default panel
        });

         // Set the minimum selectable date to today's date
        jDateChooser1.setMinSelectableDate(new Date());

        // Add PropertyChangeListener to restrict weekends
        jDateChooser1.getDateEditor().addPropertyChangeListener("date", evt -> {
            if (evt.getNewValue() != null) {
                Date selectedDate = (Date) evt.getNewValue();
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(selectedDate);

                int dayOfWeek = calendar.get(Calendar.DAY_OF_WEEK);

                // Check if the selected date is Saturday or Sunday
                if (dayOfWeek == Calendar.SATURDAY || dayOfWeek == Calendar.SUNDAY) {
                    JOptionPane.showMessageDialog(this, "Weekends are not allowed. Please select a weekday.");
                    jDateChooser1.setDate(null); // Clear the invalid selection
                }
            }
        });
    }
    
    public void populateDetails(Patient patient) {
        if (patient != null) {
            lblPatientName.setText( patient.getName());              // Display Patient Name with label
        } else {
            JOptionPane.showMessageDialog(this, "Patient data is null.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblDoctorID = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Oswald", 1, 36)); // NOI18N
        jLabel1.setText("Schedule An Appointment");

        jLabel2.setFont(new java.awt.Font("Source Sans Pro Black", 0, 18)); // NOI18N
        jLabel2.setText("Doctor:");

        jLabel3.setFont(new java.awt.Font("Source Sans Pro Black", 0, 18)); // NOI18N
        jLabel3.setText("Patient Name:");

        jLabel4.setFont(new java.awt.Font("Source Sans Pro Black", 0, 18)); // NOI18N
        jLabel4.setText("Purpose:");

        jLabel5.setFont(new java.awt.Font("Source Sans Pro Black", 0, 18)); // NOI18N
        jLabel5.setText("Date:");

        jLabel6.setFont(new java.awt.Font("Source Sans Pro Black", 0, 18)); // NOI18N
        jLabel6.setText("Time:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "09:00", "09:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consultation", "Vision Screening", "Eyewear Fitting", "Follow-up Appointment", "Special Tests", "Surgery Pre/Post Consultation" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Source Sans Pro Semibold", 1, 14)); // NOI18N
        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Source Sans Pro Semibold", 1, 14)); // NOI18N
        backButton.setText("CANCEL");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Source Sans Pro Black", 0, 18)); // NOI18N
        jLabel7.setText("Dr. Juan Dela Cruz");

        lblPatientName.setFont(new java.awt.Font("Source Sans Pro Semibold", 0, 18)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Source Sans Pro Black", 0, 18)); // NOI18N
        jLabel8.setText("DoctorID:");

        lblDoctorID.setFont(new java.awt.Font("Source Sans Pro Black", 0, 18)); // NOI18N
        lblDoctorID.setText("1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(125, 125, 125)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel8))
                                .addGap(91, 91, 91)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblPatientName, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                    .addComponent(lblDoctorID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(jButton1)
                                .addGap(51, 51, 51)
                                .addComponent(backButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(94, 94, 94)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDoctorID)))
                    .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(backButton))
                .addContainerGap(28, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   
    Patient loggedInPatient = Session.getLoggedInPatient(); 
    if (loggedInPatient == null) {
    JOptionPane.showMessageDialog(this, "No logged-in patient found!", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

String patientID = String.valueOf(loggedInPatient.getID());
String doctorName = "Dr. Juan Dela Cruz"; // Fixed doctor name, change if needed
String doctorID = "1";  // Ensure this ID exists in the Doctor table
String purpose = (String) jComboBox2.getSelectedItem(); // JComboBox for purpose
Date selectedDate = jDateChooser1.getDate(); // JDateChooser for the date
String selectedTime = (String) jComboBox1.getSelectedItem(); // JComboBox for time selection

if (selectedDate == null || selectedTime == null || purpose == null) {
    JOptionPane.showMessageDialog(this, "Please fill in all fields!", "Warning", JOptionPane.WARNING_MESSAGE);
    return;
}

// Combine date and time into DATETIME format
String formattedDateTime = new SimpleDateFormat("yyyy-MM-dd").format(selectedDate) + " " + selectedTime + ":00";

try (Connection conn = DBConnect.getConnection()) {
    if (conn == null) {
        JOptionPane.showMessageDialog(this, "Database connection failed.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Check if the logged-in patient already has an appointment
    String checkPatientQuery = "SELECT * FROM appointment WHERE PatientID = ?";
    try (PreparedStatement checkStmt = conn.prepareStatement(checkPatientQuery)) {
        checkStmt.setString(1, patientID);
        try (ResultSet rs = checkStmt.executeQuery()) {
            if (rs.next()) {
                JOptionPane.showMessageDialog(this,
                    "You already have an appointment scheduled. Please view your appointment.",
                    "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }

    // Check if the selected time slot is already booked
    String checkTimeSlotQuery = "SELECT * FROM appointment WHERE DateTime = ?";
    try (PreparedStatement checkTimeStmt = conn.prepareStatement(checkTimeSlotQuery)) {
        checkTimeStmt.setString(1, formattedDateTime);
        try (ResultSet rs = checkTimeStmt.executeQuery()) {
            if (rs.next()) {
                JOptionPane.showMessageDialog(this,
                    "The selected time slot is already booked. Please choose another time.",
                    "Warning", JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
    }

    // Confirm before scheduling
    int confirm = JOptionPane.showConfirmDialog(this,
        "Are you sure you want to schedule this appointment?",
        "Confirm Appointment", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        // Insert the appointment into the database, including DoctorID
        String insertQuery = "INSERT INTO appointment (PatientID, DoctorID, DoctorName, Purpose, DateTime) VALUES (?, ?, ?, ?, ?)";
        try (PreparedStatement insertStmt = conn.prepareStatement(insertQuery)) {
            insertStmt.setString(1, patientID);
            insertStmt.setString(2, doctorID);  // Adding DoctorID
            insertStmt.setString(3, doctorName);
            insertStmt.setString(4, purpose);
            insertStmt.setString(5, formattedDateTime);
            insertStmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Appointment scheduled successfully!",
                "Success", JOptionPane.INFORMATION_MESSAGE);
        }
    }
} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "An error occurred: " + e.getMessage(),
        "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_jButton1ActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
            backButton.addActionListener(e -> {
            mainWindow.showDefaultPanel();  // Go back to the default panel
        });
    }//GEN-LAST:event_backButtonActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblDoctorID;
    private javax.swing.JLabel lblPatientName;
    // End of variables declaration//GEN-END:variables
}
